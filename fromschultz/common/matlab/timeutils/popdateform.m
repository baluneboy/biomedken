function [val,str,strPattern]=popdateform(strInput);

%popdateform - determine dateform value based on string input.
%
%[val,str,strPattern]=popdateform(strInput); % see popdatestr 
%
%Input: strInput - string input for datetime
%
%Outputs: val - scalar as shown below
%         str - DATEFORM string
%         strPattern - string as in keyForDateform column below
%
%     val                  str							 strPattern
%  ----------------  ------------------                                 -------------
%   DATEFORM number   DATEFORM string         Example                  keyForDateform
%     -10          'sdn'  (non-string input)          730519.458333333 @sdn
%     -9           'DDd HHh MMm SS.SSSs'           29d 15h 45m 17.842s @#d#h#m#s
%     -8           'DD:HH:MM:SS.SSS'               29:15:45:17.842     @#:#:#:#
%     -7           'HH:MM:SS.SSS'                     15:45:17.842     @#:#:#
%     -6           'MM:SS.SSS'                           45:17.842     @#:#
%     -5           'SS.SSS'                                 17.842     @#
%     -4           'YYYY:DOY:hh:mm:ss.sss'    1995:60:15:45:17.842     @#:#:#:#:#
%     -3.1         'YYYY_MM_DD_hh_mm_ss.sss'  1995_03_01_15_45_17.842  @#_#_#_#_#_#
%     -3           'YYYY,MM,DD,hh,mm,ss.sss'  1995,03,01,15,45,17.842  @#,#,#,#,#,#
%     -2           'YYYY:MM:DD:hh:mm:ss.sss'  1995:03:01:15:45:17.842  @#:#:#:#:#:#
%     -1           'MM/DD/YYYY,hh:mm:ss.sss'  03/01/1995,15:45:17.842  @#/#/#,#:#:#
%      0           'dd-mmm-yyyy,HH:MM:SS.SSS' 01-Mar-1995,15:45:17.842 @#-x-#,#:#:#

% author: Ken Hrovat, 10/17/2000
% $Id: popdateform.m 4160 2009-12-11 19:10:14Z khrovat $

% define format val/str/strPattern for matching structure
sFormat=struct(...
   'values',...
   [(-9:-4)'; -3.1; (-3:0)'],...
   'strings',...
   {{...
         'DDd HHh MMm SS.SSSs';...
         'DD:HH:MM:SS.SSS';...
         'HH:MM:SS.SSS';...
         'MM:SS.SSS';...
         'SS.SSS';...
         'YYYY:DOY:hh:mm:ss.sss';...
         'YYYY_MM_DD_hh_mm_ss.sss';...
         'YYYY,MM,DD,hh,mm,ss.sss';...
         'YYYY:MM:DD:hh:mm:ss.sss';...
         'MM/DD/YYYY,hh:mm:ss.sss';...
         'dd-mmm-yyyy,HH:MM:SS.SSS';...
      }},...
   'patterns',...
   {{...
         '#d#h#m#s';...
         '#:#:#:#';...
         '#:#:#';...
         '#:#';...
         '#';...
         '#:#:#:#:#';...
         '#_#_#_#_#_#';...
         '#,#,#,#,#,#';...
         '#:#:#:#:#:#';...
         '#/#/#,#:#:#';...
         '#-x-#,#:#:#';...
      }}...   
   );

% Take care of serial datenumbers first
if isnumeric(strInput)
   val=-10;
   str='sdn';
   strPattern='sdn';
   return
end
   
% Condense format and input pattern
strPatternIn=lower(strInput);
if any(ismember(strPatternIn,'-'))
   strPatternIn=collapsechars(strPatternIn,'abcdefgjlmnoprstuvy','x'); % unique letters in 'JanFeb...NovDec'
end
strPatternIn=collapsechars(strPatternIn); % collapse digits and decimal pts to #
strPatternIn=strrep(strPatternIn,' ','');

% Look for exact match
ind=strmatch(lower(strPatternIn),lower(sFormat.patterns),'exact');

if length(ind)==1
   val=sFormat.values(ind);
   str=sFormat.strings{ind};
   strPattern=sFormat.patterns{ind};
else
   error(sprintf('ambiguous or unrecognizable time format: %s',strInput))
end

